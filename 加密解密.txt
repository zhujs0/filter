c#
base64编码：
①
public string EncodeBase64(string code_type,string code) 
{ 
string encode = ""; 
byte[] bytes = Encoding.GetEncoding(code_type).GetBytes(code); 
try 
{ 
encode = Convert.ToBase64String(bytes); 
} 
catch 
{ 
encode = code; 
} 
return encode; 
} 


② System.Text.Encoding encode = System.Text.Encoding.ASCII ;
    byte[]  bytedata = encode.GetBytes( "test");
    string strPath = Convert.ToBase64String(bytedata,0,bytedata.Length);


base64解码：
①
public string DecodeBase64(string code_type,string code) 
{ 
string decode = ""; 
byte[] bytes = Convert.FromBase64String(code); 
try 
{ 
decode = Encoding.GetEncoding(code_type).GetString(bytes); 
} 
catch 
{ 
decode = code; 
} 
return decode; 
} 
②
 string strPath =  "aHR0cDovLzIwMy44MS4yOS40Njo1NTU3L1
9iYWlkdS9yaW5ncy9taWRpLzIwMDA3MzgwLTE2Lm1pZA==";         
    byte[] bpath = Convert.FromBase64String(strPath);
    strPath = System.Text.ASCIIEncoding.Default.GetString(bpath);


1）16位的MD5加密
public static string MD5Encrypt16(string password)
{
    var md5 = new MD5CryptoServiceProvider();
    string t2 = BitConverter.ToString(md5.ComputeHash(Encoding.Default.GetBytes(password)), 4, 8);
    t2 = t2.Replace("-", "");
    return t2;
}


2）32位的MD5加密

public static string MD5Encrypt32(string password)
{
    string cl = password;
    string pwd = "";
    MD5 md5 = MD5.Create(); //实例化一个md5对像
    // 加密后是一个字节类型的数组，这里要注意编码UTF8/Unicode等的选择　
    byte[] s = md5.ComputeHash(Encoding.UTF8.GetBytes(cl));
    // 通过使用循环，将字节类型的数组转换为字符串，此字符串是常规字符格式化所得
    for (int i = 0; i < s.Length; i++)
    {
        // 将得到的字符串使用十六进制类型格式。格式后的字符是小写的字母，如果使用大写（X）则格式后的字符是大写字符 
        pwd = pwd + s[i].ToString("X");
    }
    return pwd;
}

3）64位的MD5加密
public static string MD5Encrypt64(string password)
{
    string cl = password;
    //string pwd = "";
    MD5 md5 = MD5.Create(); //实例化一个md5对像
    // 加密后是一个字节类型的数组，这里要注意编码UTF8/Unicode等的选择　
    byte[] s = md5.ComputeHash(Encoding.UTF8.GetBytes(cl));
    return Convert.ToBase64String(s);	
}
